---
- name: "create_middle_one_ca | Check if destination exist for MIDDLE ONE CA"
  register: root_middle_one_ca_path_stat
  ansible.builtin.stat:
    path: "{{ root_middle_one_ca_path }}"

- name: "create_middle_one_ca | Create a bundle ZIP for MIDDLE ONE CA: {{ bootstrap_ssl_middle_one_ca.cn }}"
  when: not root_middle_one_ca_path_stat.stat.exists
  block:
    - name: "create_middle_one_ca | Create the new destination directory"
      ansible.builtin.file:
        path: "{{ root_middle_one_ca_path }}/"
        state: directory
        recurse: yes
        owner: "{{ bootstrap_ssl_user }}"
        group: "{{ bootstrap_ssl_user }}"
        mode: 0700

    - name: "create_middle_one_ca | Create a KEY of {{ bootstrap_ssl_key_size }}"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.command: "openssl genpkey -algorithm RSA -out {{ root_middle_one_ca_filename }}.key -pkeyopt rsa_keygen_bits:{{ bootstrap_ssl_key_size }}"

    - name: "create_middle_one_ca | Create a CSR"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.command: "openssl req -new -key {{ root_middle_one_ca_filename }}.key -out {{ root_middle_one_ca_filename }}.csr -subj \"/C={{ bootstrap_ssl_middle_one_ca.c }}/ST={{ bootstrap_ssl_middle_one_ca.st }}/L={{ bootstrap_ssl_middle_one_ca.l }}/O={{ bootstrap_ssl_middle_one_ca.o }}/OU={{ bootstrap_ssl_middle_one_ca.ou }}/emailAddress={{ bootstrap_ssl_middle_one_ca.email_address }}/CN={{ bootstrap_ssl_middle_one_ca.cn }}\" -days {{ bootstrap_ssl_validity }}"

    - name: "create_middle_one_ca | Sign a CRT"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.command: "openssl x509 -req -in {{ root_middle_one_ca_filename }}.csr -CA {{ root_ca_filename }}.crt -CAkey {{ root_ca_filename }}.key -CAcreateserial -out {{ root_middle_one_ca_filename }}.crt"

    - name: "create_middle_one_ca | Converte the CRT into PEM"
      register: output
      changed_when: output.rc != 0
      ansible.builtin.command: "openssl x509 -in {{ root_middle_one_ca_filename }}.crt -outform pem -out {{ root_middle_one_ca_filename }}.pem"

    - name: "create_middle_one_ca | Create ZIP bundle"
      register: output
      changed_when: output.size <= 0
      community.general.archive:
        path: "{{ root_middle_one_ca_path }}"
        dest: "{{ root_middle_one_ca_path }}.zip"
        format: zip
        owner: "{{ bootstrap_ssl_user }}"
        group: "{{ bootstrap_ssl_user }}"
        mode: 0700
