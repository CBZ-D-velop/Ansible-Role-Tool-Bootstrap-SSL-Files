---
# Don't forget to keep this file updated
# molecule/<scenario>/verify.yml
- name: "Verify"
  hosts: "all"
  gather_facts: false
  tasks:

    - name: "Verify SSL files for ROOT CA: {{ inv_bootstrap_ssl_root_ca.cn }}"
      vars:
        root_ca_path: "{{ inv_bootstrap_ssl_base_path }}/{{ inv_bootstrap_ssl_root_ca.cn | replace(' ', '-') }}"
        root_ca_filename: "{{ root_ca_path }}/{{ inv_bootstrap_ssl_root_ca.cn | replace(' ', '-') }}"
      block:
        - name: "Verify CRT file for ROOT CA: {{ inv_bootstrap_ssl_root_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_ca_filename }}.crt -text"

        - name: "Verify PEM file for ROOT CA: {{ inv_bootstrap_ssl_root_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_ca_filename }}.pem -text"

        - name: "Verify ZIP bundle for ROOT CA: {{ inv_bootstrap_ssl_root_ca.cn }}"
          register: folder_check
          failed_when: not folder_check.stat.exists
          ansible.builtin.stat:
            path: "{{ root_ca_path }}.zip"

    - name: "Verify SSL files for MIDDLE ONE CA: {{ inv_bootstrap_ssl_middle_one_ca.cn }}"
      vars:
        root_middle_one_ca_path: "{{ inv_bootstrap_ssl_base_path }}/{{ inv_bootstrap_ssl_middle_one_ca.cn | replace(' ', '-') }}"
        root_middle_one_ca_filename: "{{ root_middle_one_ca_path }}/{{ inv_bootstrap_ssl_middle_one_ca.cn | replace(' ', '-') }}"
      block:
        - name: "Verify CRT file for MIDDLE ONE CA: {{ inv_bootstrap_ssl_middle_one_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_middle_one_ca_filename }}.crt -text"

        - name: "Verify PEM file for MIDDLE ONE CA: {{ inv_bootstrap_ssl_middle_one_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_middle_one_ca_filename }}.pem -text"

        - name: "Verify ZIP bundle for MIDDLE ONE CA: {{ inv_bootstrap_ssl_middle_one_ca.cn }}"
          register: folder_check
          failed_when: not folder_check.stat.exists
          ansible.builtin.stat:
            path: "{{ root_middle_one_ca_path }}.zip"

    - name: "Verify SSL files for MIDDLE TWO CA: {{ inv_bootstrap_ssl_middle_two_ca.cn }}"
      vars:
        root_middle_one_ca_path: "{{ inv_bootstrap_ssl_base_path }}/{{ inv_bootstrap_ssl_middle_two_ca.cn | replace(' ', '-') }}"
        root_middle_one_ca_filename: "{{ root_middle_one_ca_path }}/{{ inv_bootstrap_ssl_middle_two_ca.cn | replace(' ', '-') }}"
      block:
        - name: "Verify CRT file for MIDDLE TWO CA: {{ inv_bootstrap_ssl_middle_two_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_middle_one_ca_filename }}.crt -text"

        - name: "Verify PEM file for MIDDLE TWO CA: {{ inv_bootstrap_ssl_middle_two_ca.cn }}"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          ansible.builtin.command: "openssl x509 -noout -in {{ root_middle_one_ca_filename }}.pem -text"

        - name: "Verify ZIP bundle for MIDDLE TWO CA: {{ inv_bootstrap_ssl_middle_two_ca.cn }}"
          register: folder_check
          failed_when: not folder_check.stat.exists
          ansible.builtin.stat:
            path: "{{ root_middle_one_ca_path }}.zip"

    - name: "Verify SSL files for Certificates"
      block:
        - name: "Verify CRT file file for Certificates"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          loop: "{{ inv_bootstrap_ssl_end_certs }}"
          loop_control:
            loop_var: certificate
          vars:
            path: "{{ inv_bootstrap_ssl_base_path }}/{{ certificate.cn | replace(' ', '-') }}"
            filename: "{{ path }}/{{ certificate.cn | replace(' ', '-') }}"
          ansible.builtin.command: "openssl x509 -noout -in {{ filename }}.crt -text"

        - name: "Verify PEM file for Certificates"
          register: verification
          failed_when: verification.rc != 0
          changed_when: verification.rc != 0
          loop: "{{ inv_bootstrap_ssl_end_certs }}"
          loop_control:
            loop_var: certificate
          vars:
            path: "{{ inv_bootstrap_ssl_base_path }}/{{ certificate.cn | replace(' ', '-') }}"
            filename: "{{ path }}/{{ certificate.cn | replace(' ', '-') }}"
          ansible.builtin.command: "openssl x509 -noout -in {{ filename }}.pem -text"

        - name: "Verify ZIP bundle for Certificates"
          register: folder_check
          failed_when: not folder_check.stat.exists
          loop: "{{ inv_bootstrap_ssl_end_certs }}"
          loop_control:
            loop_var: certificate
          vars:
            path: "{{ inv_bootstrap_ssl_base_path }}/{{ certificate.cn | replace(' ', '-') }}"
          ansible.builtin.stat:
            path: "{{ path }}.zip"
